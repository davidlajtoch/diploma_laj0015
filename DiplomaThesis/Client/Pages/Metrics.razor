@page "/metrics"
@using DiplomaThesis.Client.Services.Interfaces
@using DiplomaThesis.Shared.Contracts
@using Microsoft.AspNetCore.Authorization

@inject IReportService ReportService

@attribute [Authorize]

<PageTitle>Metrics - ReporTiny</PageTitle>
<PageHeader Text="Metrics" />

@if (_reports is null || _reports.Length == 0)
{
    <Loader />
}
else
{
    <div class="animate__animated animate__fadeIn">
        <AuthorizeView Roles="Architect">
        <div class="list_reports">
            @foreach (var report in _reports)
            {
                <div class="item @(_expandedReportId == report.Id ? "item_expanded" : "")">
                    <ReportContainer Report="@report" />
                    <div class="menu">
                        <button class="button_default" @onclick="() => ExpandReport(report.Id)">
                                @(_expandedReportId == report.Id ? "Shrink" : "Expand")
                        </button>
                            <button class="button_default" @onclick="() => SelectReport(report)">
                                Select
                        </button>
                    </div>
                </div>
            }
        </div>
        </AuthorizeView>

        <div>
            <AuthorizeView Roles="Architect">
                <ReportMenu @ref="_reportMenu" OnReportChanged="UpdateData"/>
            </AuthorizeView>
        </div>
    </div>
}

@code {
    ReportMenu _reportMenu = null!;
    ReportContract[]? _reports;

    private Guid? _expandedReportId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await UpdateData();
        StateHasChanged();
    }

    private async Task UpdateData()
    {
        var reports = await ReportService.GetReportsFromBackend();

        if (reports is not null)
        {
            _reports = reports;
        }

        StateHasChanged();
    }

    private void ExpandReport(Guid reportId)
    {
        if(reportId == _expandedReportId)
        {
            _expandedReportId = null;
            return;
        }
        _expandedReportId = reportId;
    }

    private void SelectReport(ReportContract report)
    {
        _reportMenu.Report = report;
    }

}