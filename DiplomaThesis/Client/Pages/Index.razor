@page "/"

@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using DiplomaThesis.Client.Services.Interfaces
@using DiplomaThesis.Shared.Contracts

@inject SignOutSessionStateManager SignOutManager
@inject NavigationManager Navigation
@inject IActivityService ActivityService

<PageTitle>Home - ReporTiny</PageTitle>

@if (_activityAll is null || _activityUserGroup is null)
{
    <Loader />
}
else
{
    <div class="animate__animated animate__fadeIn">
        <div class="section_top">
            <div class="centered_container">
                <LogoAnimatedLarge />

                <div class="about">
                    The tiniest PowerBI client
                </div>
            </div>
        </div>

        <div class="section_middle">
            <div class="grid_links">
                <NavLink style="text-decoration: none;" href="" Match="NavLinkMatch.All">
                    <div class="tile">
                        <i class="material-icons icon">home</i>
                        <span class="name">Home</span>
                        <span class="description">Go to the home page and view the recent activity</span>
                    </div>
                </NavLink>
                <AuthorizeView>
                    <NavLink style="text-decoration: none;" href="metrics">
                        <div class="tile">
                            <i class="material-icons icon">timeline</i>
                            <span class="name">Metrics</span>
                            <span class="description">View the metrics and edit their settings</span>
                        </div>
                    </NavLink>
                </AuthorizeView>

                <AuthorizeView Roles="Architect">
                    <NavLink style="text-decoration: none;" href="data-sources">
                        <div class="tile">
                            <i class="material-icons icon">storage</i>
                            <span class="name">Datasets</span>
                            <span class="description">View the datasets and edit their settings</span>
                        </div>
                    </NavLink>
                </AuthorizeView>

                <AuthorizeView>
                    <NavLink style="text-decoration: none;" href="data-sources">
                        <div class="tile">
                            <i class="material-icons icon">event_note</i>
                            <span class="name">Assignments</span>
                            <span class="description">View the assignments</span>
                        </div>
                    </NavLink>
                </AuthorizeView>

                <AuthorizeView Roles="Admin">
                    <NavLink style="text-decoration: none;" href="administration">
                        <div class="tile">
                            <i class="material-icons icon">supervisor_account</i>
                            <span class="name">Administration</span>
                            <span class="description">View and manage users and user groups</span>
                        </div>
                    </NavLink>
                </AuthorizeView>

                <AuthorizeView>
                    <NavLink style="text-decoration: none;" href="/chat">
                        <div class="tile">
                            <i class="material-icons icon">chat</i>
                            <span class="name">Chat</span>
                            <span class="description">Chat with the members of your user group</span>
                        </div>
                    </NavLink>
                </AuthorizeView>

                <AuthorizeView>
                    <NavLink style="text-decoration: none;" href="authentication/profile">
                        <div class="tile">
                            <i class="material-icons icon">face</i>
                            <span class="name">@context.User.Identity?.Name</span>
                            <span class="description">Edit your account information</span>
                        </div>
                    </NavLink>
                </AuthorizeView>

                <AuthorizeView>
                    <NavLink style="text-decoration: none;" @onclick="BeginSignOut">
                        <div class="tile">
                            <i class="material-icons icon">https</i>
                            <span class="name">Log out</span>
                            <span class="description">End your session and switch to another user.</span>
                        </div>
                    </NavLink>
                </AuthorizeView>

            </div>
        </div>

        <AuthorizeView>
            <Authorized>

                <div class="section_bottom">

                    <PageHeader Text="Recent activity" />
                    <div class="menu">
                        <div class="group_left">
                            <button class="button_default @(_showUserGroupActivity ? "selected" : "")" @onclick="() => _showUserGroupActivity = true">Activity in my group</button>
                            <button class="button_default @(!_showUserGroupActivity ? "selected" : "")" @onclick="() => _showUserGroupActivity = false">All activity</button>
                        </div>

                        <div class="group_right">
                            @if (_showUserGroupActivity)
                            {
                                <input type="text" class="input_search_default" placeholder="Search..."
                               @oninput="@((e) => SearchAllActivity(e.Value!.ToString()!))">
                            }
                            else
                            {
                                <input type="text" class="input_search_default" placeholder="Search..."
                               @oninput="@((e) => SearchAllActivity(e.Value!.ToString()!))">
                            }
                        </div>
                    </div>

                    @if (_showUserGroupActivity)
                    {
                        <ul class="list_activity animate__animated animate__fadeIn">
                            <li class="header">
                                <div class="col col-1">Activity</div>
                                <div class="col col-2">User Group</div>
                                <div class="col col-3">Created</div>
                            </li>
                            @foreach (var activity in _activityUserGroupSearched!)
                            {
                                <li class="row">
                                    <div class="col col-1" data-label="Activity">@activity.Message</div>
                                    <div class="col col-2" data-label="User Group">@activity.UserGroupName</div>
                                    <div class="col col-3" data-label="Created">@activity.Created</div>
                                </li>

                            }
                        </ul>
                    }
                    else
                    {
                        <ul class="list_activity animate__animated animate__fadeIn">
                            <li class="header">
                                <div class="col col-1">Activity</div>
                                <div class="col col-2">User Group</div>
                                <div class="col col-3">Created</div>
                            </li>
                            @foreach (var activity in _activityAllSearched!)
                            {
                                <li class="row">
                                    <div class="col col-1" data-label="Activity">@activity.Message</div>
                                    <div class="col col-2" data-label="User Group">@activity.UserGroupName</div>
                                    <div class="col col-3" data-label="Created">@activity.Created</div>
                                </li>
                            }
                        </ul>
                    }
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
}

@code {
    private List<ActivityContract>? _activityAll;
    private List<ActivityContract>? _activityAllSearched;
    private List<ActivityContract>? _activityUserGroup;
    private List<ActivityContract>? _activityUserGroupSearched;

    private bool _showUserGroupActivity = true;

    protected override async Task OnInitializedAsync()
    {
        await UpdateData();
    }

    private async Task UpdateData()
    {
        var activityAll = await ActivityService.GetAllActivity();
        var activityUserGroup = await ActivityService.GetCurrentUserUserGroupActivity();

        _activityAll = activityAll;
        _activityAllSearched = activityAll;
        _activityUserGroup = activityUserGroup;
        _activityUserGroupSearched = activityUserGroup;

        StateHasChanged();
    }

    private void SearchAllActivity(string searched_string)
    {
        if (searched_string is null)
        {
            return;
        }

        _activityAllSearched = _activityAll!.FindAll(a =>
            a.Message.Contains(searched_string) ||
            a.UserGroupName.Contains(searched_string) ||
            a.Created.ToString()!.Contains(searched_string));
    }

    private void SearchUserGroupActivity(string searched_string)
    {
        if (searched_string is null)
        {
            return;
        }

        _activityUserGroupSearched = _activityUserGroup!.FindAll(a =>
            a.Message.Contains(searched_string) ||
            a.UserGroupName.Contains(searched_string) ||
            a.Created.ToString()!.Contains(searched_string));
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}