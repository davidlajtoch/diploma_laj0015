<div class="section_file_format_guide animate__animated animate__fadeIn">
    <div class="section_header">File format guide</div>
    <div class="text_center">
        These examples show how the uploaded files should be formatted.
        Trying to upload wrongly formatted files can result in error.
    </div>
    <div class="section_header">JSON</div>
    <div class="text_center">
        Rows are indicated with '{}'.
        Inside rows, columns and their corresponding values should be placed in pairs divided by ':'.<br />
        The file should start and end with '[]' surrounding all the rows.
    </div><br />
    <div class="example_code">
        [<br />
        {"Name":"Change 1","State":"New","Source":"Internal","Date":"2020-1-1T00:00:00Z","Release":"Release 2"},<br />
        {"Name":"Change 2","State":"Approved","Source":"Internal","Date":"2020-1-1T00:00:00Z","Release":"Release 2"}<br />
        ]
    </div>
    <div class="section_header">CSV</div>
    <div class="text_center">
        Standard CSV format.
        First line indicates the column names, all the following lines represent rows.
        Every column has to be separated with ','.
    </div><br />
    <div class="example_code">
        Name,State,Source,Date,Release<br />
        Change 1,New,Internal,2020-1-1T00:00:00Z,Release 2<br />
        Change 2,Approved,Internal,2020-1-1T00:00:00Z,Release 2
    </div>
</div>
<div class="bottom_menu">
    <div class="group_left">
        <button class="button_default nomargin" @onclick="Hide">Back</button>
    </div>
    <div class="group_right">
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<IBrowserFile> OnHide { get; set; }

    private async Task Hide()
    {
        await OnHide.InvokeAsync();
    }
}
