@using System.Data;
@using System.Globalization;

@if (DatasetDataTable != null)
{
    <table class="table_dataset_preview animate__animated animate__fadeIn">
        <tr>
            @for (int i = 0; i < DatasetDataTable!.Columns.Count; i++)
            {
                <th>
                    @DatasetDataTable.Columns[i] :
                    <span class="text_light">@DatasetColumnTypes![i]</span>
                </th>
            }
        </tr>
        @for (int row = 0; row < DatasetDataTable.Rows.Count; row++)
        {
            if (row >= DatasetPreviewMaxRows) break;
            <tr>
                @for (int column = 0; column < DatasetDataTable.Columns.Count; column++)
                {
                    <td>
                        @DatasetDataTable.Rows[row].ItemArray[column]
                    </td>
                }
            </tr>
        }
    </table>

    <!--
    <div class="control_menu">
        <button class="button_default" @onclick="AutoCorrectDataTypes">Auto correct data types</button>
    </div>
    -->
}

@code {
    [Parameter]
    public DataTable DatasetDataTable { get; set; }
    [Parameter]
    public EventCallback<List<string>> OnDatasetFileLoaded { get; set; }

    private List<string>? DatasetColumnTypes { get; set; }
    private const int DatasetPreviewMaxRows = 5;

    protected override async Task OnInitializedAsync()
    {
        await GetDatasetDataTableColumnTypes();
        StateHasChanged();
    }

    private async Task GetDatasetDataTableColumnTypes()
    {
        List<string> datasetColumnDatatypesList = new();

        for (int c = 0; c < DatasetDataTable.Columns.Count; c++)
        {
            bool isDateTime = true;
            bool isDouble = true;
            bool isBool = true;

            var columnName = DatasetDataTable.Columns[c].ToString();
            datasetColumnDatatypesList.Add("String");

            for (int r = 1; r < DatasetDataTable.Rows.Count; r++)
            {
                if (!DateTime.TryParse(DatasetDataTable.Rows[r][columnName].ToString(), out _))
                {
                    isDateTime = false;
                }

                if (!double.TryParse(DatasetDataTable.Rows[r][columnName].ToString(), NumberStyles.Any, CultureInfo.InvariantCulture, out _))
                {
                    isDouble = false;
                }

                if (!bool.TryParse(DatasetDataTable.Rows[r][columnName].ToString(), out _))
                {
                    isBool = false;
                }
            }

            if (isDateTime)
            {
                datasetColumnDatatypesList[c] = "DateTime";
                continue;
            }
            if (isDouble)
            {
                datasetColumnDatatypesList[c] = "Double";
                continue;
            }
            if (isBool)
            {
                datasetColumnDatatypesList[c] = "Bool";
                continue;
            }
        }

        DatasetColumnTypes = datasetColumnDatatypesList;

        await OnDatasetFileLoaded.InvokeAsync(DatasetColumnTypes);
    }
}