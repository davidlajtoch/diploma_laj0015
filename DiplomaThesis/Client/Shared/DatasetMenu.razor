@using DiplomaThesis.Client.Services.Interfaces
@using DiplomaThesis.Shared.Contracts
@inject IAdministrationService AdministrationService

<div class="dataset_menu_container animate__animated animate__fadeIn" style="display: @(ShowDatasetMenu ? "block" : "none");">
    <div class="dataset_menu">
        @if (Dataset is null)
        {
            <p>
                <em>Loading...</em>
            </p>
        }
        else
        {
            <table class="table_info">
                <tr>
                    <td class="label">ID</td>
                    <td>@Dataset.Id</td>
                </tr>
                <tr>
                    <td class="label">Name</td>
                    <td>@Dataset.Name</td>
                </tr>
                <tr>
                    <td class="label">Columns</td>
                    <td>@Dataset.ColumnNames.Count()</td>
                </tr>
                <tr>
                    <td class="label">Uploaded through ReporTiny</td>
                    <td>@Dataset.ColumnNames.Any()</td>
                </tr>
            </table>

            <div class="section_header">Data preview</div>
            @if (@Dataset.ColumnNames.Any())
            {
                <table class="table_dataset_preview">
                    <tr>
                        @for(int i = 0; i < Dataset.ColumnNames.Count(); i++)
                        {
                            <th>@Dataset.ColumnNames[i] : @Dataset.ColumnTypes[i]</th>
                        }
                    </tr>
                </table>
            }
            else
            {
                <div class="info_preview_not_available text_light">Data preview is only available for datasets uploaded through ReporTiny</div>
            }


            <div class="bottom_menu">
                <div class="group_left">
                    <button class="button_warning" @onclick="DeleteDataset" @onmouseout="ResetDatasetDeleteConfirm">
                        @(DeleteDatasetConfirmation ? "Are you sure?" : "Delete dataset")
                    </button>
                </div>
                <div class="group_right">
                    <button class="button_default" @onclick="SaveAndToggleDatasetMenu">Save and close</button>
                </div>
            </div>
        }
    </div>
</div>


@code {
    [Parameter]
    public EventCallback OnDatasetChanged { get; set; }

    private DatasetContract? Dataset { get; set; }

    public bool ShowDatasetMenu { get; set; }
    private bool DeleteDatasetConfirmation = false;

    public async Task SaveAndToggleDatasetMenu()
    {
        ShowDatasetMenu = !ShowDatasetMenu;
        DeleteDatasetConfirmation = false;
    }

    public async Task ShowDataset(DatasetContract dataset)
    {
        Dataset = dataset;

        ShowDatasetMenu = true;
        StateHasChanged();
    }

    private async Task DeleteDataset()
    {
        if (DeleteDatasetConfirmation == false)
        {
            DeleteDatasetConfirmation = true;
            return;
        }

        if (Dataset is null)
        {
            return;
        }

        await SaveAndToggleDatasetMenu();

        //if (await AdministrationService.DeleteUserGroup(UserGroup!.Id))
        //{
        //    await SaveAndToggleUserGroupMenu();
        //    await OnUserGroupChanged.InvokeAsync();
        //}
    }

    private void ResetDatasetDeleteConfirm()
    {
        DeleteDatasetConfirmation = false;
    }
}
